#+SETUPFILE: https://raw.githubusercontent.com/fniessen/org-html-themes/master/setup/theme-bigblow.setup
#+OPTIONS: html-postamble:nil

#+TITLE: KYUNG MO KWEON
#+AUTHOR: Kyung Mo Kweon

#+BEGIN_EXPORT html
<style>
div img {
  width: 50%;
  text-align: center;
}
@media (max-width: 600px) {
  div img {
    width: 90%;
  }
  .buttons.dontprint,
  #minitoc,
  #left-panel-button {
    display: none;
  }
}

</style>
#+END_EXPORT

* Machine Learning
** American Sign Language Recognition with HMM

#+BEGIN_EXPORT html
<img src="https://www-i6.informatik.rwth-aachen.de/~dreuw/database/rwth-boston-104/overview/images/orig/098-start.jpg">
#+END_EXPORT
*** Overview
- Convert Sign Langauge to English words
- Achieved the WER(Word Error Rate) of 43.8%
- Used Plain Hidden Markov Models and Ensembles

*** Link
- GitHub: [[https://nbviewer.jupyter.org/github/kkweon/AIND-Recognizer/blob/develop/asl_recognizer.ipynb][link]]

** Reinforcement Learning

#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/PAAC-in-Tensorflow/blob/master/assets/pong.gif?raw=true" />
#+END_EXPORT

*** Overview
- Implemented and compared multiple reinforcement learning algorithms using Tensorflow:
  - DQN (in [[https://github.com/kkweon/DQN-in-R][R]] and [[https://gist.github.com/kkweon/61fbb76822d9f5753dec2f8e86e86aac][Python]])
  - [[https://github.com/hunkim/ReinforcementZeroToAll][DDQN]]
  - [[https://github.com/kkweon/PAAC-in-Tensorflow][PAAC]]
  - [[https://github.com/hunkim/ReinforcementZeroToAll/blob/master/08_4_softmax_pg_pong_y.py][Policy Gradients]]
  - [[https://github.com/kkweon/A3C-Tensorflow][A3C]]

** Spending Visualization
#+BEGIN_EXPORT html
<img src="./assets/personal_project_saving.png">
#+END_EXPORT

*** Overview
- Used random forest to categorize my monthly expenditures
- Visualized monthly spending in comparison to the previous month

*** Link
- GitHub: [[https://github.com/kkweon/my-spending-report][link]]


* Self Driving Car
** Vehicle Detection
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/UNet-in-Tensorflow/blob/master/assets/output.gif?raw=true" />
#+END_EXPORT
*** Overview
- Segmented vehicles on a picture or a video frame with the IOU (Intersection of Union) of ~80%
- Implemented the Convolutional Networks for Image Segmentation (U-Net) from scratch
*** Link
- [[https://github.com/kkweon/UNet-in-Tensorflow][GitHub]]

** Path Planning
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/sdc-path-planning/raw/master/assets/demo.gif?raw=true" />
#+END_EXPORT
*** Overview
- Generates a path plan that can drive on the highway
- Implemented an efficient(lane change if necessary) and safe trajectory
*** Link
- [[https://github.com/kkweon/sdc-path-planning][GitHub]]

** Vehicle Control with a Model Predictive Controller

#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/CarND-MPC-Project/blob/master/images/mpc_project.gif?raw=true" />
#+END_EXPORT
*** Overview
- Successfully drove vehicles autonomously, maintaining high-speed of over 70+ mph
- Implemented a model predictive controller in the simulator
- Used C++ and WebSocket to communicate with the simulator
*** Link
- GitHub: [[https://github.com/kkweon/CarND-MPC-Project][link]]

** Vehicle Localization using Unscented Kalman Filter

#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/unscented-kalman-filter-simulation/raw/master/assets/unscented-kalman-filter.gif?raw=true" />
#+END_EXPORT

*** Overview
- Localized the vehicle in the simulator with the root mean squared error (RMSE) of ~0.1
- Implemented Unscented Kalman Filter in C++
- Used googletest to follow the Test Driven Development (TDD)

*** Link
- GitHub: [[https://github.com/kkweon/unscented-kalman-filter-simulation/blob/master/README.org][link]]

** Traffic Sign Recognition
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/CarND-Traffic-Sign-Classifier-Project/raw/master/examples/raw.png?raw=true" />
#+END_EXPORT

*** Overview

 - Used the multiple layers of Convolution Neural Network(CNN) in Keras
 - Used image augmentation tricks such as color shift, rotation, and zooming.
 - Achieved 98.01% accuracy on the test data


*** Link
- GitHub: [[https://github.com/kkweon/CarND-Traffic-Sign-Classifier-Project/blob/master/writeup.md][link]]

** Finding Driving Lanes
#+BEGIN_EXPORT html
<img src="https://media.giphy.com/media/3o6obVZUBgGQODqupq/giphy.gif" />
#+END_EXPORT

*** Overview
- Used OpenCV to detect driving lanes on the road
- Used canny edge detection and color thresholding
- Written in Python

*** Link
- Jupyter Notebook: [[https://nbviewer.jupyter.org/github/kkweon/lane-detection/blob/master/P1.ipynb][link]]



* Web
** Landing Page
 #+BEGIN_EXPORT html
 <img src="assets/Mountain Travel.png" alt="Mountain Landing">
 #+END_EXPORT

*** Overview
- Use Webpack, Pug, Sass
*** Link
- [[https://kkweon.gitlab.io/mountain-landing][Demo]]
- [[https:gitlab.com/kkweon/mountain-landing][GitLab]]
** Mango Commerce
#+BEGIN_EXPORT html
<img src="https://i.imgur.com/CK9bT4H.png" />
#+END_EXPORT

*** Overview
- Fruits/Vegetable Marketplace Demo
- Admin users can create an order using a custom chatbot
- Used Elixir, Phoenix, Bootstrap, WebSocket, ES6

*** Link
- [[https://mango-commerce.herokuapp.com/][Demo]]
- [[https://github.com/kkweon/Simple-App-in-Phoenix/tree/mango][GitHub]]

** PR-12
*** Overview
PR-12 is the reading/study group organized in Tensorflow KR Facebook Group.
The objective is to read/discuss deep learning papers every week hosted in Awesome Deep Learning Papers.

*** Link
- [[https://kkweon.github.io/pr12/][Demo]]
- [[https://github.com/kkweon/pr12][GitHub]]

** Hue Control Dashboard
#+BEGIN_EXPORT html
<img src="https://i.imgur.com/K16phhV.jpg" />
#+END_EXPORT
*** Overview
- Control smart home plugs such as Phillips Hue and TP Link smart plugs
- Used Ajax, Webpack, Elm, ES6, CSS

*** Link
- [[https://github.com/kkweon/hue-control][GitHub]]

** Nato Phonetic Convert
*** Overview
- Convert English Sentence to Nato Phonetic Words

For example,

#+BEGIN_SRC text
M	⟼	Mike
O	⟼	Oscar

K	⟼	Kilo
W	⟼	Whiskey
E	⟼	Echo
O	⟼	Oscar
N	⟼	November
#+END_SRC

- Used Elm, CSS

*** Link
- [[https://kkweon.github.io/nato-phonetic-elm/][Demo]]
- [[https://github.com/kkweon/nato-phonetic-elm][GitHub]]

** Kaggle Clone
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/minikaggle-clone-django/raw/master/readme_assets/participate_competition.png?raw=true" />
#+END_EXPORT
*** Overview
- Kaggle is a competition website for data scientist
- This is a clone version of Kaggle using Django, Postgres

*** Link
- [[https://minikaggle.herokuapp.com/][Demo]]
- [[https://github.com/kkweon/minikaggle-clone-django][GitHub]]

** Price Alert
#+BEGIN_EXPORT html
<img src="https://i.imgur.com/9p6m9PJ.png" />
#+END_EXPORT

*** Overview
- Users can set up a price alert with the target price
- Users will get an alert if the price goes down to the target price
- Flask and MongoDB were used

*** Link
- [[https://price-alert-flask.herokuapp.com/][Demo]]
- [[https://github.com/kkweon/price_alert_flask][GitHub]]

** Question Asking Platform for Conference/Seminar
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/question-vote-realtime-elm/raw/master/readme_assets/demo.gif?raw=true" />
#+END_EXPORT

*** Overview
- Users can write/upvote/downvote a question
- Sync real-time using websockets
- Written in Elm

*** Link
- [[https://github.com/kkweon/question-vote-realtime-elm][GitHub]]

** Simple Weather Ajax in Angular.js (v1)
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/AngularJS1_Weather_SPA_Reference/raw/master/assets/demo.png?raw=true" />
#+END_EXPORT
*** Overview
- Used the ~openweathermap.org~ API service to query a weather of a city
- Angular.js(v1)

*** Link
- [[https://kkweon.github.io/AngularJS1_Weather_SPA_Reference/#/][Demo]]
- [[https://github.com/kkweon/AngularJS1_Weather_SPA_Reference][GitHub]]

** Blog REST API
*** Overview
- Implemented RESTful Blog service through Django Rest Framework

*** Link
- [[https://github.com/kkweon/django-blog-rest][GitHub]]



* Android/iOS

** Employee Manager App
#+BEGIN_EXPORT html
<img src="https://gitlab.com/kkweon/TIL/raw/master/ReactNative/Manager/assets/manager.demo.gif" alt="Demo Image">
#+END_EXPORT
** Overview
As a manager, I want to

- add an employee
- delete an employee
- text an employee the work shift
- edit the employee information

** Link

- [[https://gitlab.com/kkweon/TIL/tree/master/ReactNative/Manager][GitLab]]



* Utils
** sh2md
*** Overview
Record your shell session and produce in the markdown format


#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/sh2md/blob/master/assets/demo.gif?raw=true">
#+END_EXPORT

*** Link
- [[https://github.com/kkweon/sh2md][GitHub]]

** Shell in Scala

*** Overview

Shell Implementation in Scala
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/scala-shell/blob/master/assets/demo.gif?raw=true">
#+END_EXPORT

*** Link

- [[https://github.com/kkweon/scala-shell][GitHub]]

** CSS Autoprefix Plugin for Emacs
*** Overview
Turn this code
#+BEGIN_SRC css
  div {
    display: flex;
  }
#+END_SRC

into

#+BEGIN_SRC css
  div {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
#+END_SRC
*** Link
- [[https://github.com/kkweon/emacs-css-autoprefixer][GitHub]]

** gbrowse
*** Overview
Open any git repository file in the browser in GitHub Respository

#+BEGIN_SRC
gbrowse # open current branch in GitHub (e.g., https://github.com/kkweon/gbrowse/tree/master)
gbrowse src/index.ts # (e.g., https://github.com/kkweon/gbrowse/tree/master/src/index.ts)
#+END_SRC

*** Link
- [[https://github.com/kkweon/gbrowse][GitHub]]

** Trello2Text


*** Overview
Export trello cards to text with Slack markdown format

*** Link
- [[https://github.com/kkweon/Trello2Text][GitHub]]

** CalTrain Shuttle Bus Alexa Skill
*** Overview
- There is a shuttle bus from Broadway CalTrain Station to Millbrae CalTrain Station
- Created a simple Alexa skill that users can ask Alexa to get the shuttle bus schedule
- Used Node.js, AWS Serverless Lambda, Mocha, TDD

*** Link
- [[https://www.amazon.com/Mo-Kweon-Millbrae-Broadway-ShuttleBus/dp/B076W9HTV8/ref=sr_1_1?s=digital-skills&ie=UTF8&qid=1509512577&sr=1-1&keywords=millbrae][Amazon]]
- [[https://github.com/kkweon/caltrain-shuttle-bus-alexa-skill][GitHub]]

** Keras Docset for Dash/Zeal
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/keras-docset/raw/master/assets/keras.dense.zeal.png?raw=true" />
#+END_EXPORT
*** Overview
- Allows users to lookup Keras API easily
- Created a Keras docset for Zeal/Dash

*** Link
- [[https://github.com/kkweon/keras-docset][GitHub]]

** Identicon Generator
#+BEGIN_EXPORT html
<img src="https://github.com/kkweon/identicon-generator-in-elixir/blob/master/assets/Hello%20World.png?raw=true" />
#+END_EXPORT
*** Overview
- Identicon refers to an image that is unique and can represent one's identity (Like UUID but in image format)
- Used Elixir and Erlang library

*** Link
- [[https://github.com/kkweon/identicon-generator-in-elixir][GitHub]]
** Reddit Crawler in Haskell

*** Overview
- Valuable machine learning related information are posted in [[https://www.reddit.com/r/MachineLearning/][/r/MachineLearning]] every day
- Instead of visiting the website and risking my time (since it's very addictive), I wrote a crawler that crawls the top 20 posts and sends me an email
- Used Haskell, Stack, Docker

*** Link
- [[https://github.com/kkweon/reddit-crawl-haskell.git][GitHub]]

** DeepLearningZeroToAll/ReinforcementZeroToAll

*** Overview
- Created to teach people deep learning and reinforcement learning in Tensorflow
- Maintainer for both repositories

*** Link
- [[https://github.com/hunkim/DeepLearningZeroToAll][DeepLearningZeroToAll]]
- [[https://github.com/hunkim/ReinforcementZeroToAll.git][ReinforcementZeroToAll]]
